import { AutoChartCell } from './type';
import { AliasMap, UniqueId, Dataset } from './type';
export declare const assignPivotCharts: (originDataset: any, dimList: UniqueId[], measureList: UniqueId[], aliasMapOld: AliasMap, MAX_PIVOT_ROW: number, MAX_PIVOT_COLUMN: number) => {
    cell: AutoChartCell;
    dataset: any;
    error?: undefined;
    errMsg?: undefined;
    colorItems?: undefined;
    aliasMap?: undefined;
} | {
    error: boolean;
    errMsg: string;
    cell?: undefined;
    dataset?: undefined;
    colorItems?: undefined;
    aliasMap?: undefined;
} | {
    cell: AutoChartCell;
    dataset: any;
    colorItems: string[];
    aliasMap: any;
    error?: undefined;
    errMsg?: undefined;
};
export declare const processCombination: (originDataset: any, dimList: UniqueId[], measureList: UniqueId[], aliasMapOld: AliasMap, MAX_PIVOT_ROW: number, MAX_PIVOT_COLUMN: number) => any[];
export declare const assignScatterPlot: (originDataset: any, dimList: UniqueId[], measureList: UniqueId[], aliasMapOld: AliasMap) => {
    scatterCell: AutoChartCell;
    dataset: any;
    error?: undefined;
    errMsg?: undefined;
    colorItems?: undefined;
    aliasMap?: undefined;
} | {
    error: boolean;
    errMsg: string;
    scatterCell?: undefined;
    dataset?: undefined;
    colorItems?: undefined;
    aliasMap?: undefined;
} | {
    scatterCell: AutoChartCell;
    dataset: any[][][];
    colorItems: string[];
    aliasMap: any;
    error?: undefined;
    errMsg?: undefined;
};
export declare const sortTimeDim: (dimList: any, MAX_PIVOT_ROW: any, MAX_PIVOT_COLUMN: any) => UniqueId[];
export declare const assignPieChart: (originDataset: any, dimList: UniqueId[], measureList: UniqueId[], aliasMapOld: AliasMap) => {
    pieCell: AutoChartCell;
    dataset: any;
    error?: undefined;
    errMsg?: undefined;
    colorItems?: undefined;
    aliasMap?: undefined;
} | {
    error: boolean;
    errMsg: string;
    pieCell?: undefined;
    dataset?: undefined;
    colorItems?: undefined;
    aliasMap?: undefined;
} | {
    pieCell: AutoChartCell;
    dataset: any;
    colorItems: string[];
    aliasMap: any;
    error?: undefined;
    errMsg?: undefined;
};
export declare const assignMeasureCard: (originDataset: any, dimList: UniqueId[], measureList: UniqueId[], aliasMapOld: AliasMap) => {
    cardCell: AutoChartCell;
    dataset: Dataset;
};
export declare const assignFunnelChart: (originDataset: any, dimList: UniqueId[], measureList: UniqueId[], aliasMapOld: AliasMap) => {
    funnelCell: AutoChartCell;
    dataset: any;
};
export declare const assignDualAxis: (originDataset: any, dimList: UniqueId[], measureList: UniqueId[], subMeasureList: UniqueId[], aliasMapOld: AliasMap) => {
    error: boolean;
    errorMsg: string;
    dataset?: undefined;
    cell?: undefined;
    colorItems?: undefined;
    aliasMap?: undefined;
} | {
    dataset: any;
    cell: AutoChartCell;
    colorItems: string[];
    aliasMap: any;
    error?: undefined;
    errorMsg?: undefined;
};
