import type { BaseContext } from '../types/atom';
import type { AtomName } from '../types/atom';
import type { LLMResponse, ToolMessage } from '../types/llm';
import { type ILLMOptions, type LLMMessage } from '../types/llm';
export declare class LLMManage {
    options: ILLMOptions;
    historys: Record<string, BaseContext[]>;
    constructor(options: ILLMOptions);
    getDefaultOptions(): ILLMOptions;
    updateOptions(options: ILLMOptions): void;
    run(name: AtomName, messages: LLMMessage[], tools?: ToolMessage[]): Promise<LLMResponse | {
        error: any;
    }>;
    parseTools(res: LLMResponse): any;
    parseJson(res: LLMResponse): any;
}
