{"version":3,"sources":["../src/utils/video.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAG7C,IAAI,GAAG,GAAG,CAAC,CAAC;AACZ,MAAM,UAAgB,gBAAgB,CACpC,GAAW,EACX,SAAc,EACd,SAAmB,EACnB,OAAO,GAAG,KAAK,EACf,aAA4B,EAC5B,IAAiC;;;QAEjC,MAAM,EAAE,YAAY,EAAE,eAAe,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,YAAY,EAAE,GAAG,aAAa,CAAC;QAEjG,GAAG,EAAE,CAAC;QACN,MAAM,aAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QACzC,MAAM,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;QAClC,MAAM,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;QAClC,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QAErC,MAAM,KAAK,GAAG,MAAA,IAAI,CAAC,KAAK,mCAAI,GAAG,CAAC;QAChC,MAAM,MAAM,GAAG,MAAA,IAAI,CAAC,MAAM,mCAAI,GAAG,CAAC;QAClC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAGrB,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;YAC/B,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;SAC3C;QACD,aAAa,CAAC,IAAI,GAAG,QAAQ,CAAC;QAE9B,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAC3C,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE;YAC9B,YAAY,EAAE,MAAM;YACpB,IAAI,EAAE,MAAM;YACZ,GAAG,EAAE,CAAC;YACN,kBAAkB,EAAE,IAAI;YACxB,MAAM,EAAE,aAAa;YACrB,SAAS,EAAE;gBACT,MAAM,EAAE,IAAI;gBACZ,KAAK,EAAE,CAAC;gBACR,IAAI,EAAE,CAAC;gBACP,MAAM,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE;gBAC3B,UAAU,EAAE,GAAG;gBACf,KAAK,EAAE;oBACL,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAChB,KAAK,EAAE,OAAO;oBACd,OAAO,EAAE,GAAG;iBACb;aACF;SACF,CAAC,CAAC;QAEH,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAChC,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QAE1C,MAAM,MAAM,CAAC,WAAW,EAAE,CAAC;QAE3B,MAAM,KAAK,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;QAC3C,MAAM,MAAM,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACjF,MAAM,mBAAmB,GAAG,MAAM,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC;QAClE,MAAM,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC;QACrB,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,mBAAmB,EAAE;YACvB,aAAa,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;SAClC;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;YAC/B,IAAI,mBAAmB,EAAE;gBACvB,IAAI,CAAC,GAAG,CAAC,GAAG,aAAa,EAAE;oBACzB,aAAa,IAAI,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;oBACtC,MAAc,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;iBAC5C;aACF;YACD,aAAa,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC;YAC3B,MAAM,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAEjC,IAAI,IAAI,KAAK,MAAM,EAAE;gBACnB,MAAM,MAAM,GAAI,MAAc,CAAC,QAAQ,EAAE,CAAC;gBAC1C,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE,SAAS,GAAG,IAAI,GAAG,MAAM,EAAE,MAAM,CAAC,CAAC;aAC3D;iBAAM;gBACL,MAAM,IAAI,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC;gBAC5D,MAAM,IAAI,GAAG,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;oBACjD,MAAM,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,EAAE;wBAC1B,IAAI,IAAI,EAAE;4BACR,MAAM,IAAI,GAAG;gCACX,IAAI,EAAE,IAAI;gCACV,MAAM,EAAE,KAAK;gCACb,IAAI;6BACL,CAAC;4BACF,OAAO,CAAC,IAAI,CAAC,CAAC;yBACf;6BAAM;4BACL,MAAM,CAAC,SAAS,CAAC,CAAC;yBACnB;oBACH,CAAC,EAAE,WAAW,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE,SAAS,GAAG,IAAI,GAAG,MAAM,EAAE,MAAM,SAAS,CAAE,IAAY,CAAC,IAAI,CAAC,CAAC,CAAC;aACxF;SAKF;QAED,MAAM,CAAC,OAAO,EAAE,CAAC;QACjB,MAAM,MAAM,CAAC,GAAG,CACd,YAAY,EACZ,IAAI,EACJ,eAAe,EACf,MAAM,EACN,IAAI,EACJ,OAAO,EACP,MAAM,EACN,SAAS,EACT,UAAU,EACV,SAAS,EACT,GAAG,OAAO,MAAM,CACjB,CAAC;QACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE;YAC/B,MAAM,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,SAAS,GAAG,IAAI,GAAG,MAAM,CAAC,CAAC;SAChD;;CAEF","file":"video.js","sourcesContent":["import { cloneDeep } from '@visactor/vutils';\nimport type { OuterPackages, TimeType } from '../types/utils';\n\nlet idx = 0;\nexport async function _chatToVideoWasm(\n  fps: number,\n  propsSpec: any,\n  propsTime: TimeType,\n  outName = 'out',\n  outerPackages: OuterPackages,\n  mode?: 'node' | 'desktop-browser'\n) {\n  const { ManualTicker, defaultTimeline, VChart, fetchFile, FFmpeg, createCanvas } = outerPackages;\n\n  idx++;\n  const defaultTicker = new ManualTicker();\n  const spec = cloneDeep(propsSpec);\n  const time = cloneDeep(propsTime);\n  const { totalTime, frameArr } = time;\n\n  const width = spec.width ?? 720;\n  const height = spec.height ?? 480;\n  spec.width = width;\n  spec.height = height;\n\n  // 关闭player\n  if (frameArr && frameArr.length) {\n    spec.player && (spec.player.auto = false);\n  }\n  defaultTicker.mode = 'manual';\n\n  const canvas = createCanvas(width, height);\n  const vchart = new VChart(spec, {\n    renderCanvas: canvas,\n    mode: 'node',\n    dpr: 1,\n    disableDirtyBounds: true,\n    ticker: defaultTicker,\n    options3d: {\n      enable: true,\n      alpha: 0,\n      beta: 0,\n      center: { x: 1030, y: 300 },\n      fieldRatio: 0.8,\n      light: {\n        dir: [3, -2, -1],\n        color: 'white',\n        ambient: 0.7\n      }\n    }\n  });\n\n  const stage = vchart.getStage();\n  stage.ticker = defaultTicker;\n  stage.ticker.addTimeline(defaultTimeline);\n\n  await vchart.renderAsync();\n\n  const frame = (totalTime / 1000) * fps + 1;\n  const player = vchart.getComponents().filter((d: any) => d.type === 'player')[0];\n  const shouldControlPlayer = player && frameArr && frameArr.length;\n  const t = 1000 / fps;\n  let nextFrameTime = 0;\n  if (shouldControlPlayer) {\n    nextFrameTime = frameArr.shift();\n  }\n  for (let i = 0; i <= frame; i++) {\n    if (shouldControlPlayer) {\n      if (t * i > nextFrameTime) {\n        nextFrameTime += frameArr.shift() || 0;\n        (player as any)._playerComponent.forward();\n      }\n    }\n    defaultTicker.tickTo(t * i);\n    vchart.getStage().render();\n    const num = `0000${i}`.slice(-3);\n\n    if (mode === 'node') {\n      const buffer = (canvas as any).toBuffer();\n      FFmpeg.FS('writeFile', `vchart${idx}.${num}.png`, buffer);\n    } else {\n      const size = { width: canvas.width, height: canvas.height };\n      const blob = await new Promise((resolve, reject) => {\n        canvas.toBlob((blob: any) => {\n          if (blob) {\n            const info = {\n              data: blob,\n              format: 'PNG',\n              size\n            };\n            resolve(info);\n          } else {\n            reject('no blob');\n          }\n        }, `image/png`);\n      });\n      FFmpeg.FS('writeFile', `vchart${idx}.${num}.png`, await fetchFile((blob as any).data));\n    }\n\n    // defaultTicker.mode = 'raf'\n    // const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // console.log(new Uint8Array(imageData.data.buffer))\n  }\n\n  vchart.release();\n  await FFmpeg.run(\n    '-framerate',\n    '30',\n    '-pattern_type',\n    'glob',\n    '-i',\n    '*.png',\n    '-c:v',\n    'libx264',\n    '-pix_fmt',\n    'yuv420p',\n    `${outName}.mp4`\n  );\n  for (let i = 0; i <= frame; i++) {\n    const num = `0000${i}`.slice(-3);\n    FFmpeg.FS('unlink', `vchart${idx}.${num}.png`);\n  }\n  // defaultTicker.mode = 'raf';\n}\n"]}