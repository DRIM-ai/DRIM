import type { Cell, DataItem, DataTable, FieldInfo } from '../types';
import { DataType, ROLE } from '../types';
export declare const getRoleByFieldType: (type: DataType) => ROLE;
export declare const formatFieldInfo: (fieldInfo: FieldInfo[]) => FieldInfo[];
export declare const getDataListByField: (dataset: DataTable, fieldName: string) => (string | number)[];
export declare const getRemainedFields: (cell: Cell, fieldInfo: FieldInfo[]) => FieldInfo[];
export declare const getFieldByRole: (fields: FieldInfo[], role: ROLE) => FieldInfo;
export declare const getFieldByDataType: (fields: FieldInfo[], dataTypeList: DataType[]) => FieldInfo;
export declare const getFieldsByDataType: (fields: FieldInfo[], dataTypeList: DataType[]) => FieldInfo[];
export declare const getFieldDomain: (dataset: DataItem[], column: string, role: ROLE) => number[] | string[];
export declare const detectFieldType: (dataset: DataItem[], column: string) => FieldInfo;
export declare const getFieldInfo: (dataset: DataItem[], columns: string[]) => FieldInfo[];
export declare const getFieldInfoFromDataset: (dataset: DataItem[]) => FieldInfo[];
export declare const hasMeasureField: (fieldInfo: FieldInfo[]) => boolean;
export declare const getFieldIdInCell: (cellField: any) => string;
