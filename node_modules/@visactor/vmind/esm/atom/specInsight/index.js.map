{"version":3,"sources":["../src/atom/specInsight/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import type { SpecInsightCtx, SpecInsightOptions, BaseOptions } from '../../types';\nimport { AtomName } from '../../types/atom';\nimport { BaseAtom } from '../base';\nimport { isNumber, isValidNumber, merge } from '@visactor/vutils';\nimport { InsightType } from '../dataInsight/type';\nimport { getCellFromSpec } from '../../utils/spec';\nimport { TrendType } from '../dataInsight/algorithms/statistics';\nimport { isStackChart } from '../dataInsight/utils';\nimport type { DataItem } from '../../types';\nimport { Factory } from '../../core/factory';\nimport type { BaseAtomConstructor } from '../../types';\n\nexport class SpecInsightAtom extends BaseAtom<SpecInsightCtx, SpecInsightOptions> {\n  name = AtomName.SPEC_INSIGHT;\n\n  isLLMAtom: boolean = false;\n\n  constructor(context: SpecInsightCtx, option: SpecInsightOptions) {\n    super(context, option);\n  }\n\n  buildDefaultContext(context: SpecInsightCtx): SpecInsightCtx {\n    return merge(\n      {},\n      {\n        spec: {},\n        insights: []\n      },\n      context\n    );\n  }\n\n  buildDefaultOptions(): SpecInsightOptions {\n    return {\n      ...super.buildDefaultOptions(),\n      defaultMarkerLineStyle: {\n        stroke: '#000',\n        lineWidth: 1,\n        pickStrokeBuffer: 10\n      },\n      defaultMarkerSymbolStyle: {\n        fill: '#000',\n        lineWidth: 0,\n        stroke: null\n      },\n      diffMarkerSymbolStyle: {\n        size: 12,\n        originSymbolType: 'arrow',\n        style: {\n          stroke: '#000',\n          fill: false,\n          lineWidth: 1\n        }\n      },\n      labelBackground: {\n        visible: true,\n        padding: 4,\n        style: {\n          fill: '#3e3e3e',\n          fillOpacity: 0.85,\n          stroke: '#3e3e3e',\n          lineWidth: 1,\n          cornerRadius: 4\n        }\n      },\n      defaultOffsetInGrowthMarkLine: 10\n    };\n  }\n\n  shouldRunByContextUpdate(context: SpecInsightCtx): boolean {\n    return true;\n  }\n\n  /** generate mark point into chart by datum into coordinates */\n  protected generateMarkPoint(spec: any, datum: DataItem, options: { direction: string; text: string; info: any }) {\n    const { direction, text, info } = options;\n    if (!spec.markPoint) {\n      spec.markPoint = [];\n    }\n    const { labelBackground } = this.options;\n    const { seriesId, seriesIndex } = info || {};\n    const offset = 12;\n    const offsetD = 8;\n    let offsetX = 0;\n    let offsetY = -offset;\n    const dOffset = {\n      dx: 0,\n      dy: offsetD\n    };\n    if (direction === 'bottom') {\n      offsetY = offset;\n      dOffset.dy = -offsetD;\n    } else if (direction !== 'top') {\n      dOffset.dy = 0;\n      offsetY = 0;\n      if (direction === 'right') {\n        offsetX = offset;\n        dOffset.dx = -offsetD;\n      } else if (direction === 'left') {\n        offsetX = -offset;\n        dOffset.dx = offsetD;\n      }\n    }\n    spec.markPoint.push({\n      coordinate: datum,\n      ...(isNumber(seriesIndex) ? { relativeSeriesIndex: seriesIndex } : {}),\n      ...(seriesId ? { relativeSeriesId: seriesId } : {}),\n      itemContent: {\n        offsetX,\n        offsetY,\n        autoRotate: false,\n        confine: true,\n        text: {\n          text: text,\n          padding: 4,\n          ...dOffset,\n          labelBackground,\n          style: {\n            fill: '#fff'\n          }\n        }\n      },\n      itemLine: {\n        type: 'type-s',\n        arcRatio: 0.05,\n        startSymbol: {\n          visible: false\n        },\n        endSymbol: {\n          visible: false\n        },\n        line: {\n          style: {\n            lineWidth: 1.5\n          }\n        }\n      },\n      targetSymbol: {\n        offset: 0,\n        style: {\n          size: 6,\n          lineWidth: 1\n        }\n      }\n    });\n  }\n\n  protected formatterValue(value: string | number) {\n    const floatValue = Number(value);\n    if (floatValue > 10) {\n      return floatValue.toFixed(0);\n    } else if (floatValue >= 1) {\n      return floatValue.toFixed(1);\n    } else if (floatValue >= 0.1) {\n      return floatValue.toFixed(2);\n    }\n    return isValidNumber(floatValue) ? floatValue.toFixed(3) : '';\n  }\n\n  protected getMarkPointText(type: InsightType, value: string) {\n    switch (type) {\n      case InsightType.Min:\n      case InsightType.Max:\n        return value ? `${type}: ${value}` : type;\n      case InsightType.TurningPoint:\n        return value ? `Turning Point: ${value}` : 'Turning Point';\n      default:\n        return value ? `Outlier: ${value}` : 'Outlier';\n    }\n  }\n\n  /** generate markline of avg insights */\n  protected getAvgMarkLine(spec: any, value: number, options: { position: 'x' | 'y'; text: string; info: any }) {\n    const { position, text, info } = options;\n    if (!spec.markLine) {\n      spec.markLine = [];\n    }\n    const { defaultMarkerLineStyle, defaultMarkerSymbolStyle, labelBackground } = this.options;\n    const { seriesId, seriesIndex } = info || {};\n    spec.markLine.push({\n      [position]: value,\n      ...(isNumber(seriesIndex) ? { relativeSeriesIndex: seriesIndex } : {}),\n      ...(seriesId ? { relativeSeriesId: seriesId } : {}),\n      label: {\n        visible: true,\n        autoRotate: false,\n        text,\n        position: 'insideEndTop',\n        labelBackground,\n        formatConfig: {\n          content: ['percentage'],\n          fixed: 1\n        },\n        style: {\n          fill: '#fff',\n          fontSize: 12\n        }\n      },\n      line: {\n        style: {\n          ...defaultMarkerLineStyle\n        }\n      },\n      endSymbol: {\n        visible: true,\n        size: 10,\n        refX: 6,\n        symbolType: 'triangleLeft',\n        autoRotate: false,\n        style: {\n          ...defaultMarkerSymbolStyle\n        }\n      }\n    });\n  }\n\n  /** generate markline of overall trend by coordinates */\n  protected getGrowthMarkLine(\n    spec: any,\n    options: {\n      coordinates: DataItem[];\n      text: string;\n      isTransposed: boolean;\n    }\n  ) {\n    if (!spec.markLine) {\n      spec.markLine = [];\n    }\n    const { defaultMarkerLineStyle, defaultMarkerSymbolStyle, defaultOffsetInGrowthMarkLine, labelBackground } =\n      this.options;\n    const { coordinates, text, isTransposed = false } = options;\n    const offset = `${isTransposed ? defaultOffsetInGrowthMarkLine : -defaultOffsetInGrowthMarkLine}%`;\n    spec.markLine.push({\n      coordinates,\n      autoRange: true,\n      line: {\n        style: {\n          ...defaultMarkerLineStyle,\n          lineDash: [0]\n        }\n      },\n      label: {\n        position: 'middle',\n        text,\n        labelBackground,\n        style: {\n          fill: '#fff',\n          fontSize: 14\n        },\n        pickable: true,\n        childrenPickable: false,\n        refY: 0\n      },\n      endSymbol: {\n        ...defaultMarkerSymbolStyle\n      },\n      coordinatesOffset: [\n        {\n          x: isTransposed ? offset : 0,\n          y: isTransposed ? 0 : offset\n        },\n        {\n          x: isTransposed ? offset : 0,\n          y: isTransposed ? 0 : offset\n        }\n      ]\n    });\n  }\n\n  protected runBeforeLLM(): SpecInsightCtx {\n    const { spec, insights, chartType } = this.context;\n    const newSpec = merge({}, spec);\n    const cell = getCellFromSpec(spec, chartType);\n    const pointIndexMap: Record<string, boolean> = {};\n    const isStack = isStackChart(spec, chartType, cell);\n    insights.forEach(insight => {\n      const { type, data, value, fieldId, info } = insight;\n      const direction = cell.isTransposed\n        ? Number(value) >= 0\n          ? 'right'\n          : 'left'\n        : Number(value) >= 0 || !isValidNumber(value)\n        ? 'top'\n        : 'bottom';\n      if (\n        [InsightType.Outlier, InsightType.ExtremeValue, InsightType.MajorityValue, InsightType.TurningPoint].includes(\n          type\n        ) &&\n        isStack\n      ) {\n        // @todo @czx don't support stack chart in markPoint since no vchart instance to get absolute point\n        return;\n      }\n      const formatV = this.formatterValue(value);\n      const dataString = JSON.stringify(data?.[0]?.dataItem || {});\n      switch (type) {\n        case InsightType.Min:\n        case InsightType.Max:\n        case InsightType.Outlier:\n        case InsightType.ExtremeValue:\n        case InsightType.MajorityValue:\n        case InsightType.TurningPoint:\n          if (!pointIndexMap[dataString]) {\n            pointIndexMap[dataString] = true;\n            this.generateMarkPoint(\n              newSpec,\n              { ...data[0].dataItem, [fieldId]: Number(value) },\n              {\n                direction,\n                text: this.getMarkPointText(type, formatV),\n                info\n              }\n            );\n          }\n          break;\n        case InsightType.Avg:\n          this.getAvgMarkLine(newSpec, Number(value), {\n            position: cell.isTransposed ? 'x' : 'y',\n            text: formatV ? `Avg: ${formatV}` : 'Avg',\n            info\n          });\n          break;\n        case InsightType.OverallTrend:\n          this.getGrowthMarkLine(newSpec, {\n            coordinates: info.overall.coordinates,\n            isTransposed: cell.isTransposed,\n            text:\n              value === TrendType.INCREASING\n                ? `+${(info.change * 100).toFixed(1)}%`\n                : `${(info.change * 100).toFixed(1)}%`\n          });\n      }\n    });\n    this.updateContext({\n      newSpec\n    });\n    return this.context;\n  }\n}\n\nexport const registerSpecInsightAtom = () => {\n  Factory.registerAtom(\n    AtomName.SPEC_INSIGHT,\n    SpecInsightAtom as unknown as BaseAtomConstructor<SpecInsightCtx, SpecInsightOptions>\n  );\n};\n"]}