{"version":3,"sources":["../src/atom/dataInsight/algorithms/statistics.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,QAAQ,MAAM,qCAAqC,CAAC;AAE3D,MAAM,CAAN,IAAY,SAIX;AAJD,WAAY,SAAS;IACnB,kCAAqB,CAAA;IACrB,sCAAyB,CAAA;IACzB,sCAAyB,CAAA;AAC3B,CAAC,EAJW,SAAS,KAAT,SAAS,QAIpB;AAED,SAAS,OAAO,CAAC,CAAW,EAAE,CAAS;IACrC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAE9B,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC9B,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gBACf,CAAC,IAAI,CAAC,CAAC;aACR;iBAAM,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gBACtB,CAAC,IAAI,CAAC,CAAC;aACR;SACF;KACF;IAED,OAAO,CAAC,CAAC;AACX,CAAC;AAED,SAAS,SAAS,CAAC,CAAW,EAAE,CAAS;IAEvC,MAAM,OAAO,GAAa,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjD,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;IAEzB,IAAI,IAAI,CAAC;IAGT,IAAI,CAAC,KAAK,CAAC,EAAE;QAEX,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;KACzC;SAAM;QAEL,MAAM,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEhC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;SACtD;QAED,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;KACjH;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,MAAM,CAAC,CAAS,EAAE,IAAY;IACrC,IAAI,CAAC,CAAC;IACN,IAAI,CAAC,GAAG,CAAC,EAAE;QACT,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC/B;SAAM,IAAI,CAAC,KAAK,CAAC,EAAE;QAClB,CAAC,GAAG,CAAC,CAAC;KACP;SAAM,IAAI,CAAC,GAAG,CAAC,EAAE;QAChB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC/B;IAED,OAAO,CAAC,CAAC;AACX,CAAC;AAED,SAAS,aAAa,CAAC,CAAW;IAChC,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IACnB,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAE/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAE9B,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACjC,GAAG,EAAE,CAAC;SACP;KACF;IAED,OAAO,CAAC,CAAC;AACX,CAAC;AAED,SAAS,MAAM,CAAC,KAAe;IAC7B,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7E,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAEpD,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAChC,OAAO,CAAC,WAAW,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;KAChE;IACD,OAAO,WAAW,CAAC,QAAQ,CAAC,CAAC;AAC/B,CAAC;AAED,SAAS,SAAS,CAAC,CAAW;IAC5B,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IAEnB,MAAM,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;IAChC,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAG7B,MAAM,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC;IAE1E,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;AAC9B,CAAC;AAED,SAAS,MAAM,CAAC,CAAS,EAAE,KAAa;IAEtC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAE9D,IAAI,KAAK,CAAC;IACV,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;QACd,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC;KAC9B;SAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;QACrB,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC;KAC9B;SAAM;QACL,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC;KAC5B;IAED,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;AACzB,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,IAAc,EAAE,KAAK,GAAG,IAAI,EAAE,SAAS,GAAG,KAAK;IAC5E,MAAM,CAAC,GAAG,IAAI,CAAC;IACf,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IACnB,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEpC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC1B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACzC,IAAI,UAAU,CAAC;IACf,IAAI,cAAc,CAAC;IACnB,IAAI,CAAC,IAAI,SAAS,EAAE;QAClB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;QAC7C,UAAU,GAAG,KAAK,CAAC;QACnB,cAAc,GAAG,SAAS,CAAC;KAC5B;IACD,OAAO;QACL,KAAK;QACL,MAAM,EAAE,CAAC;QACT,MAAM,EAAE,CAAC;QACT,KAAK,EAAE,UAAU;QACjB,SAAS,EAAE,cAAc;KAC1B,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,MAAgB,EAAE,MAAgB;IACpE,OAAO,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC7C,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,MAAgB,EAAE,MAAgB;IACxE,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACzC,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,CAAS,EAAE,MAAc;IACxD,OAAO,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAC7B,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,IAAc;IACjD,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9B,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,IAAc,EAAE,SAAqB;IACxE,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QACrB,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;KAC1C;IAED,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,IAAI,aAAa,GAAG,CAAC,CAAC;IACtB,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,QAAQ,GAAG,CAAC,CAAC;IACjB,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,IAAI,QAAQ,GAAG,CAAC,CAAC;IACjB,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,MAAM,YAAY,GAAG,CAAC,UAAkB,EAAE,EAAE;QAC1C,IAAI,UAAU,KAAK,CAAC,EAAE;YACpB,OAAO,SAAS,CAAC,QAAQ,CAAC;SAC3B;aAAM,IAAI,UAAU,KAAK,CAAC,EAAE;YAC3B,OAAO,SAAS,CAAC,UAAU,CAAC;SAC7B;QACD,OAAO,SAAS,CAAC,UAAU,CAAC;IAC9B,CAAC,CAAC;IAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,MAAM,YAAY,GAAG,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAEjF,IAAI,YAAY,KAAK,KAAK,EAAE;YAC1B,aAAa,EAAE,CAAC;YAChB,GAAG,GAAG,CAAC,CAAC;SACT;aAAM;YACL,IAAI,aAAa,GAAG,SAAS,IAAI,CAAC,CAAC,SAAS,IAAI,YAAY,CAAC,KAAK,CAAC,KAAK,SAAS,CAAC,EAAE;gBAClF,SAAS,GAAG,aAAa,CAAC;gBAC1B,QAAQ,GAAG,KAAK,CAAC;gBACjB,MAAM,GAAG,GAAG,CAAC;gBACb,QAAQ,GAAG,KAAK,CAAC;aAClB;YACD,KAAK,GAAG,YAAY,CAAC;YACrB,aAAa,GAAG,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;YACd,GAAG,GAAG,CAAC,CAAC;SACT;KACF;IACD,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;AACvE,CAAC;AAED,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,IAAc,EAAE,EAAE;IACjD,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;IACzE,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;IAC1G,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC;AACpF,CAAC,CAAC","file":"statistics.js","sourcesContent":["// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../../../../types/jstat.d.ts\" />\nimport jStat from 'jstat';\nimport quantile from '@stdlib/stats-base-dists-t-quantile';\n\nexport enum TrendType {\n  NO_TREND = 'no trend',\n  INCREASING = 'increasing',\n  DECREASING = 'decreasing'\n}\n\nfunction mkScore(x: number[], n: number) {\n  let s = 0;\n\n  for (let k = 0; k < n - 1; k++) {\n    // 对于每个元素，我们比较后面的元素是否大于或小于它\n    for (let j = k + 1; j < n; j++) {\n      if (x[j] > x[k]) {\n        s += 1;\n      } else if (x[j] < x[k]) {\n        s -= 1;\n      }\n    }\n  }\n\n  return s;\n}\n\nfunction varianceS(x: number[], n: number) {\n  // 计算唯一数据\n  const uniqueX: number[] = Array.from(new Set(x));\n  const g = uniqueX.length;\n\n  let varS;\n\n  // 计算var(s)\n  if (n === g) {\n    // 没有重复值\n    varS = (n * (n - 1) * (2 * n + 5)) / 18;\n  } else {\n    // 存在重复值\n    const tp = new Array(g).fill(0);\n\n    for (let i = 0; i < g; i++) {\n      tp[i] = x.filter(item => item === uniqueX[i]).length;\n    }\n\n    varS = (n * (n - 1) * (2 * n + 5) - tp.reduce((acc, curr) => acc + curr * (curr - 1) * (2 * curr + 5), 0)) / 18;\n  }\n\n  return varS;\n}\n\nfunction zScore(s: number, varS: number) {\n  let z;\n  if (s > 0) {\n    z = (s - 1) / Math.sqrt(varS);\n  } else if (s === 0) {\n    z = 0;\n  } else if (s < 0) {\n    z = (s + 1) / Math.sqrt(varS);\n  }\n\n  return z;\n}\n\nfunction sensEstimator(x: number[]) {\n  let idx = 0;\n  const n = x.length;\n  const d = new Array((n * (n - 1)) / 2).fill(1);\n\n  for (let i = 0; i < n - 1; i++) {\n    for (let j = i + 1; j < n; j++) {\n      // 计算斜率并存储到d中\n      d[idx] = (x[j] - x[i]) / (j - i);\n      idx++;\n    }\n  }\n\n  return d;\n}\n\nfunction median(array: number[]) {\n  const sortedArray = array.filter(item => !isNaN(item)).sort((a, b) => a - b);\n  const midIndex = Math.floor(sortedArray.length / 2);\n\n  if (sortedArray.length % 2 === 0) {\n    return (sortedArray[midIndex - 1] + sortedArray[midIndex]) / 2;\n  }\n  return sortedArray[midIndex];\n}\n\nfunction sensSlope(x: number[]) {\n  const n = x.length;\n  //估计斜率\n  const slopes = sensEstimator(x);\n  const slope = median(slopes);\n\n  // 计算截距\n  const intercept = median(x) - median(Array.from(Array(n).keys())) * slope;\n\n  return { slope, intercept };\n}\n\nfunction pValue(z: number, alpha: number) {\n  // 使用jStat双尾检验\n  const p = 2 * (1 - jStat.normal.cdf(Math.abs(z), 0, 1));\n  const h = Math.abs(z) > jStat.normal.inv(1 - alpha / 2, 0, 1);\n\n  let trend;\n  if (z < 0 && h) {\n    trend = TrendType.DECREASING;\n  } else if (z > 0 && h) {\n    trend = TrendType.INCREASING;\n  } else {\n    trend = TrendType.NO_TREND;\n  }\n\n  return { p, h, trend };\n}\n\nexport function originalMKTest(xOld: number[], alpha = 0.05, calcScope = false) {\n  const x = xOld;\n  const n = x.length;\n  const s = mkScore(x, n);\n  const varS = varianceS(x, n);\n  const Tau = s / (0.5 * n * (n - 1));\n\n  const z = zScore(s, varS);\n  const { p, h, trend } = pValue(z, alpha);\n  let finalSlope;\n  let finalIntercept;\n  if (h && calcScope) {\n    const { slope, intercept } = sensSlope(xOld);\n    finalSlope = slope;\n    finalIntercept = intercept;\n  }\n  return {\n    trend,\n    pValue: p,\n    zScore: z,\n    slope: finalSlope,\n    intercept: finalIntercept\n  };\n}\n\nexport function spearmanCoefficient(array1: number[], array2: number[]) {\n  return jStat.spearmancoeff(array1, array2);\n}\n\nexport function pearsonCorrelationCoeff(array1: number[], array2: number[]) {\n  return jStat.corrcoeff(array1, array2);\n}\n\nexport function studentTQuantile(x: number, degree: number) {\n  return quantile(x, degree);\n}\n\nexport function coefficientVariation(data: number[]) {\n  return jStat.coeffvar(data);\n}\n\nexport function longestTrendInterval(data: number[], trendType?: TrendType) {\n  if (data.length === 0) {\n    return { length: 0, start: -1, end: -1 };\n  }\n\n  let maxLength = 1;\n  let currentLength = 1;\n  let start = 0;\n  let end = 0;\n  let maxStart = 0;\n  let maxEnd = 0;\n  let maxTrend = 0;\n  let trend = 0; // 0: no trend, 1: increasing, -1: decreasing\n  const revisedTrend = (trendValue: number) => {\n    if (trendValue === 0) {\n      return TrendType.NO_TREND;\n    } else if (trendValue === 1) {\n      return TrendType.INCREASING;\n    }\n    return TrendType.DECREASING;\n  };\n\n  for (let i = 1; i <= data.length; i++) {\n    const currentTrend = i === data.length ? null : Math.sign(data[i] - data[i - 1]);\n\n    if (currentTrend === trend) {\n      currentLength++;\n      end = i;\n    } else {\n      if (currentLength > maxLength && (!trendType || revisedTrend(trend) === trendType)) {\n        maxLength = currentLength;\n        maxStart = start;\n        maxEnd = end;\n        maxTrend = trend;\n      }\n      trend = currentTrend;\n      currentLength = currentTrend !== 0 ? 2 : 1;\n      start = i - 1;\n      end = i;\n    }\n  }\n  return { length: maxLength, start: maxStart, end: maxEnd, maxTrend };\n}\n\nexport const getMeanAndstdDev = (data: number[]) => {\n  const validData = data.filter(v => !isNaN(v));\n  const mean = validData.reduce((sum, v) => sum + v, 0) / validData.length;\n  const stdDev = Math.sqrt(validData.reduce((sum, v) => sum + Math.pow(v - mean, 2), 0) / validData.length);\n  return { mean, stdDev, max: Math.max(...validData), min: Math.min(...validData) };\n};\n"]}