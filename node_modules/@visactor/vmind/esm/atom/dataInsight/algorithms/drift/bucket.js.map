{"version":3,"sources":["../src/atom/dataInsight/algorithms/drift/bucket.ts"],"names":[],"mappings":"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","file":"bucket.js","sourcesContent":["class AdwinBucketRow {\n  maxBuckets: number;\n\n  bucketCount: number;\n\n  nextBucketRow: AdwinBucketRow | null;\n\n  previousBucketRow: AdwinBucketRow | null;\n\n  bucketSum: number[];\n\n  bucketVariance: number[];\n\n  constructor(maxBuckets = 5, nextBucketRow: AdwinBucketRow = null, previousBucketRow: AdwinBucketRow = null) {\n    this.maxBuckets = maxBuckets;\n    this.bucketCount = 0;\n    this.nextBucketRow = nextBucketRow;\n    this.previousBucketRow = previousBucketRow;\n\n    if (nextBucketRow !== null) {\n      nextBucketRow.previousBucketRow = this;\n    }\n\n    if (previousBucketRow !== null) {\n      previousBucketRow.nextBucketRow = this;\n    }\n\n    this.bucketSum = new Array(this.maxBuckets + 1).fill(0);\n    this.bucketVariance = new Array(this.maxBuckets + 1).fill(0);\n  }\n\n  insertBucket(value: number, variance: number) {\n    this.bucketSum[this.bucketCount] = value;\n    this.bucketVariance[this.bucketCount] = variance;\n    this.bucketCount += 1;\n  }\n\n  compressBucket(numberDeleted: number) {\n    const deleteIndex = this.maxBuckets - numberDeleted + 1;\n    for (let i = 0; i < deleteIndex; i++) {\n      this.bucketSum[i] = this.bucketSum[i + numberDeleted];\n      this.bucketVariance[i] = this.bucketVariance[i + numberDeleted];\n    }\n    for (let i = deleteIndex; i < this.maxBuckets + 1; i++) {\n      this.bucketSum[i] = 0;\n      this.bucketVariance[i] = 0;\n    }\n    this.bucketCount -= numberDeleted;\n  }\n}\n\nexport class AdwinRowBucketList {\n  maxBuckets: number;\n\n  count: number;\n\n  head: AdwinBucketRow | null;\n\n  tail: AdwinBucketRow | null;\n\n  constructor(maxBuckets = 5) {\n    this.maxBuckets = maxBuckets;\n    this.count = 0;\n    this.head = null;\n    this.tail = null;\n    this._addToHead();\n  }\n\n  _addToHead() {\n    this.head = new AdwinBucketRow(this.maxBuckets, this.head);\n    if (this.tail === null) {\n      this.tail = this.head;\n    }\n    this.count += 1;\n  }\n\n  addToTail() {\n    this.tail = new AdwinBucketRow(this.maxBuckets, null, this.tail);\n    if (this.head === null) {\n      this.head = this.tail;\n    }\n    this.count += 1;\n  }\n\n  removeFromTail() {\n    if (this.tail !== null) {\n      this.tail = this.tail.previousBucketRow;\n      if (this.tail === null) {\n        this.head = null;\n      } else {\n        this.tail.nextBucketRow = null;\n      }\n      this.count -= 1;\n    }\n  }\n}\n"]}