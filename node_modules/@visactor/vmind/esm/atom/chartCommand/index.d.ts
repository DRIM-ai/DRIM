import type { ChartCommandCtx, LLMMessage, ChartCommandOptions, BaseOptions } from '../../types';
import { AtomName } from '../../types';
import { BaseAtom } from '../base';
export declare class ChartCommandAtom extends BaseAtom<ChartCommandCtx, ChartCommandOptions> {
    name: AtomName;
    isLLMAtom: boolean;
    constructor(context: ChartCommandCtx, option: BaseOptions);
    buildDefaultOptions(): ChartCommandOptions;
    buildDefaultContext(context: ChartCommandCtx): ChartCommandCtx;
    shouldRunByContextUpdate(context: ChartCommandCtx): boolean;
    protected getLLMMessages(query?: string): LLMMessage[];
    protected parseLLMContent(resJson: any): ChartCommandCtx;
}
export declare const registerChartCommandAtom: () => void;
