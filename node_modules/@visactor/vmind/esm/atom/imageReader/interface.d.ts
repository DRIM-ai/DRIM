import type { BaseContext } from '../../types/atom';
export interface SimpleVChartSpec {
    type: 'common' | 'area' | 'line' | 'bar' | 'rangeColumn' | 'rangeArea' | 'map' | 'pie' | 'radar' | 'rose' | 'scatter' | 'sequence' | 'circularProgress' | 'linearProgress' | 'wordCloud' | 'funnel' | 'waterfall' | 'boxPlot' | 'gauge' | 'sankey' | 'treemap' | 'sunburst' | 'circlePacking' | 'heatmap' | 'liquid' | 'venn' | 'mosaic';
    coordinate?: 'none' | 'rect' | 'polar';
    stackOrPercent?: 'stack' | 'percent';
    transpose?: boolean;
    data?: {
        name: string;
        value: number;
        group?: string;
    }[];
    palette?: string[];
    background?: string;
    legends?: {
        type: 'discrete' | 'color' | 'size';
        orient: 'top' | 'left' | 'right' | 'bottom';
    }[];
    title?: {
        text: string;
        subText?: string;
        orient: 'top' | 'left' | 'right' | 'bottom';
    }[];
    axes?: {
        visible?: boolean;
        type: 'band' | 'linear';
        orient: 'top' | 'left' | 'right' | 'bottom' | 'radius' | 'angle';
        hasGrid?: boolean;
    }[];
    indicator?: {
        title?: string;
        content?: string[];
    }[];
    dataZoom?: {
        orient: 'top' | 'left' | 'right' | 'bottom';
    }[];
    markPoint?: {
        x: any;
        y: any;
        label?: string;
    }[];
    markLine?: {
        x?: any;
        y?: any;
        label?: string;
    }[];
    markArea?: {
        x?: any;
        x1?: any;
        y?: any;
        y1?: any;
        label?: string;
    }[];
    label?: {
        position: 'top' | 'left' | 'right' | 'bottom' | 'inside' | 'outside';
    }[];
    series?: {
        type: string;
        data: {
            name: string;
            value: number;
            group?: string;
        }[];
    }[];
}
export interface ImageReaderCtx extends BaseContext {
    image?: string;
    simpleVChartSpec?: SimpleVChartSpec;
}
