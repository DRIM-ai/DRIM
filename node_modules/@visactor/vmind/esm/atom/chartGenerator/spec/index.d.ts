import { ChartType } from '../../../types';
import type { GenerateChartCellContext } from '../type';
export declare const getChartSpecWithContext: (context: GenerateChartCellContext) => {
    colors?: string[];
    chartTheme?: string | import("@visactor/vchart/esm/theme/interface").ITheme;
    chartTypeList: ChartType[];
    basemapOption?: import("../../../types").BasemapOption;
    totalTime?: number;
    stackOrPercent?: "stack" | "percent";
    transpose?: boolean;
    fieldInfo?: import("../../../types").FieldInfo[];
    dataTable: import("../../../types").DataTable;
    command: string;
    chartType?: ChartType;
    cell: import("../../../types").Cell;
    vizSchema?: import("../../../types").VizSchema;
    spec: any;
    chartAdvistorRes?: {
        chartType: ChartType;
        spec: any;
        score: number;
    }[];
    simpleVChartSpec?: import("../../imageReader/interface").SimpleVChartSpec;
    time?: {
        totalTime: number;
        frameArr: any[];
    };
    logId?: string;
    id?: string;
    query?: string;
    response?: string;
    error?: string;
    usage?: import("../../../types").Usage;
    thoughts?: string;
    toolRes?: any;
};
