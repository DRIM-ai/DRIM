{"version":3,"sources":["../src/atom/chartGenerator/spec/transformers/rankingBar.ts"],"names":[],"mappings":"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","file":"rankingBar.js","sourcesContent":["import { isValidDataTable } from '../../../../utils/dataTable';\nimport type { GenerateChartCellContext } from '../../type';\nimport { COLOR_THEMES } from '../constants';\nimport { seriesField } from './cartesian';\nimport { revisedVChartType, theme } from './common';\n\nexport const sequenceData = (context: GenerateChartCellContext) => {\n  const { dataTable, cell, totalTime, spec } = context;\n  const timeField = cell.time as string;\n  const latestData = isValidDataTable(dataTable) ? dataTable : [];\n\n  //add the time field into spec, although it has no use for chart rendering.\n  //it can be used in getCellFromSpec.\n  spec.timeField = timeField;\n\n  // group the data by time field\n  const timeArray: any[] = [];\n  const contentMap = {} as any;\n  latestData.forEach((element: any) => {\n    if (!element[timeField]) {\n      return;\n    }\n    const time = element[timeField].toString();\n    if (!timeArray.includes(time)) {\n      timeArray.push(time);\n      contentMap[time] = [];\n      contentMap[time].push(element);\n    } else {\n      contentMap[time].push(element);\n    }\n  });\n\n  //sort the data by valueField in each group\n  const valueField = cell.y as string;\n  for (const time in contentMap) {\n    const contentItem = contentMap[time];\n\n    contentItem.sort(function (a: any, b: any) {\n      return b[valueField] - a[valueField];\n    });\n  }\n\n  const dataSpecs = Object.keys(contentMap).map(year => {\n    return {\n      data: [\n        {\n          id: 'id',\n          values: contentMap[year]\n        },\n        {\n          id: 'year',\n          values: [{ year }]\n        }\n      ]\n    };\n  });\n\n  spec.data = dataSpecs.length > 0 ? dataSpecs[0].data : [];\n\n  const duration = totalTime ? totalTime / (dataSpecs.length ? dataSpecs.length : 1) : 1000;\n\n  //config the player\n  spec.player = {\n    type: 'continuous',\n    orient: 'bottom',\n    auto: true,\n    loop: true,\n    dx: 0,\n    position: 'middle',\n    interval: duration,\n    specs: dataSpecs,\n    slider: {\n      railStyle: {\n        visible: false,\n        height: 6\n      },\n      trackStyle: {\n        visible: false\n      },\n      handlerStyle: {\n        visible: false\n      }\n    },\n    controller: {\n      backward: {\n        style: {\n          visible: false,\n          size: 12\n        }\n      },\n      forward: {\n        style: {\n          visible: false,\n          size: 12\n        }\n      },\n      start: {\n        style: {\n          visible: false\n        },\n        order: 1,\n        position: 'end'\n      },\n      pause: {\n        style: {\n          visible: false\n        }\n      }\n    }\n  };\n\n  spec.animationUpdate = {\n    bar: [\n      {\n        type: 'update',\n        options: { excludeChannels: ['x', 'y'] },\n        duration: duration,\n        easing: 'linear'\n      },\n      {\n        channel: ['x', 'y'],\n        options: { excludeChannels: ['width'] },\n        duration: duration,\n        easing: 'linear'\n      }\n    ],\n    axis: {\n      duration: duration,\n      easing: 'linear'\n    }\n  };\n\n  return { spec };\n};\n\nexport const colorDynamicBar = (context: GenerateChartCellContext) => {\n  const { colors, spec } = context;\n  // spec.data = [dataTable]\n  const colorThemes = COLOR_THEMES.default;\n  if (colors && colors.length > 0) {\n    spec.color = colors;\n  } else {\n    //apply transparent gradient\n    spec.color = colorThemes.map(c => ({\n      gradient: 'linear',\n      x0: 1,\n      y0: 0.01,\n      x1: 0.01,\n      y1: 0.01,\n      stops: [\n        {\n          offset: 0,\n          color: `#${c.split('#')[1]}FF`\n        },\n        {\n          offset: 1,\n          color: `#${c.split('#')[1]}00`\n        }\n      ]\n    }));\n  }\n\n  return { spec };\n};\n\nexport const rankingBarField = (context: GenerateChartCellContext) => {\n  //折线图根据cell分配字段\n  const { cell, spec } = context;\n  spec.xField = cell.y;\n  spec.yField = cell.x;\n  if (cell.color) {\n    spec.seriesField = cell.color;\n  } else {\n    spec.seriesField = spec.yField;\n  }\n  spec.direction = 'horizontal';\n  return { spec };\n};\n\nexport const rankingBarAxis = (context: GenerateChartCellContext) => {\n  const { spec } = context;\n\n  spec.axes = [\n    {\n      animation: true,\n      orient: 'bottom',\n      type: 'linear',\n      visible: true,\n      title: {\n        visible: false,\n        style: {\n          //fill: '#FFFFFF'\n        }\n      },\n      label: {\n        style: {\n          //fill: '#FFFFFF'\n        }\n      },\n      grid: {\n        visible: true\n      }\n    },\n    {\n      animation: true,\n      id: 'axis-left',\n      orient: 'left',\n      tick: { visible: false },\n      title: {\n        visible: false,\n        style: {\n          //fill: '#FFFFFF'\n        }\n      },\n      label: {\n        style: {\n          //fill: '#FFFFFF'\n        }\n      },\n      type: 'band'\n    }\n  ];\n\n  return { spec };\n};\n\nexport const customMark = (context: GenerateChartCellContext) => {\n  const { spec } = context;\n\n  spec.customMark = [\n    {\n      type: 'text',\n      dataId: 'year',\n      style: {\n        textBaseline: 'bottom',\n        fontSize: 130,\n        textAlign: 'right',\n        fontFamily: 'PingFang SC',\n        fontWeight: 600,\n        text: (datum: { year: any }) => datum.year,\n        x: () => 700,\n        y: () => 480 - 50,\n        fill: 'grey',\n        fillOpacity: 0.5\n      }\n    }\n  ];\n  return { spec };\n};\n\nexport const rankingBarLabel = (context: GenerateChartCellContext) => {\n  const { spec } = context;\n\n  spec.label = {\n    visible: true,\n    style: {\n      fill: '#FFFFFF',\n      stroke: null\n    },\n    animation: {\n      duration: spec.animationUpdate.axis.duration,\n      easing: 'linear'\n    }\n  };\n  return { spec };\n};\n\nexport const pipelineRankingBar = [\n  sequenceData,\n  colorDynamicBar,\n  rankingBarField,\n  rankingBarAxis,\n  seriesField,\n  // commonLabel,\n  customMark,\n  rankingBarLabel\n];\n"]}