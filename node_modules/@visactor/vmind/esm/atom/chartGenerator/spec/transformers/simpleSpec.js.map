{"version":3,"sources":["../src/atom/chartGenerator/spec/transformers/simpleSpec.ts"],"names":[],"mappings":"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","file":"simpleSpec.js","sourcesContent":["import { array, isArray, isNil } from '@visactor/vutils';\nimport type { GenerateChartCellContext } from '../../type';\n\nconst handleMaybeArray = (spec: any, handler: (spec: any) => any) => {\n  if (isArray(spec)) {\n    return spec.map(handler);\n  }\n  return handler(spec);\n};\n\nconst combineTitle = (titleSpec: any) => {\n  const titlesByOrient: any = {};\n\n  titleSpec.forEach((title: any) => {\n    const { orient } = title;\n    if (!titlesByOrient[orient]) {\n      titlesByOrient[orient] = [];\n    }\n    titlesByOrient[orient].push(title);\n  });\n\n  const res: any[] = [];\n\n  Object.values(titlesByOrient).forEach((titles: any) => {\n    if (titles.length === 2 && titles.every((title: any) => isNil(title.text))) {\n      res.push({\n        ...titles[0],\n        text: titles[0].text,\n        subtext: titles[1].text\n      });\n    } else {\n      titles.forEach((title: any) => {\n        res.push(title);\n      });\n    }\n  });\n\n  return res;\n};\n\nexport const fomartSimpleSpec = (context: GenerateChartCellContext) => {\n  const { simpleVChartSpec, spec } = context;\n\n  if (simpleVChartSpec) {\n    if (simpleVChartSpec.legends) {\n      spec.legends = simpleVChartSpec.legends;\n    } else if ('legends' in spec) {\n      delete spec.legends;\n    }\n    if (simpleVChartSpec.title) {\n      spec.title =\n        isArray(simpleVChartSpec.title) && simpleVChartSpec.title.length >= 2\n          ? combineTitle(simpleVChartSpec.title)\n          : simpleVChartSpec.title;\n    } else if ('title' in spec) {\n      delete spec.title;\n    }\n\n    if (simpleVChartSpec.axes) {\n      if (spec.axes) {\n        array(simpleVChartSpec.axes).forEach(axis => {\n          const { hasGrid, type, orient } = axis;\n          const specAxis = spec.axes.find((a: any) => a.type === type && a.orient === orient);\n\n          if (specAxis) {\n            specAxis.grid = { ...specAxis.grid, visible: hasGrid };\n          } else {\n            spec.axes.push({\n              ...axis,\n              grid: { visible: hasGrid }\n            });\n          }\n        });\n\n        spec.axes = spec.axes.filter((specAxis: any) => {\n          return simpleVChartSpec.axes.some((axis: any) => {\n            return axis.type === specAxis.type && axis.orient === specAxis.orient;\n          });\n        });\n      } else {\n        spec.axes = array(simpleVChartSpec.axes).map(axis => {\n          const { hasGrid, ...others } = axis;\n          return {\n            ...others,\n            ...(hasGrid ? { grid: { visible: true } } : {})\n          };\n        });\n      }\n    } else if (spec.axes) {\n      spec.axes = spec.axes.map((axis: any) => {\n        return {\n          ...axis,\n          visible: false\n        };\n      });\n    }\n\n    if (simpleVChartSpec.dataZoom) {\n      spec.dataZoom = simpleVChartSpec.dataZoom;\n    } else {\n      delete spec.dataZoom;\n    }\n\n    if (simpleVChartSpec.markPoint) {\n      spec.markPoint = handleMaybeArray(simpleVChartSpec.markPoint, entry => {\n        const { label, ...res } = entry;\n        return {\n          ...res,\n          visible: true,\n          itemContent: {\n            confine: true, // label  限制在图表区域\n            type: 'text',\n            text: {\n              text: label\n            }\n          }\n        };\n      });\n    }\n\n    if (simpleVChartSpec.markLine) {\n      spec.markLine = handleMaybeArray(simpleVChartSpec.markLine, entry => {\n        const { label, ...res } = entry;\n        return {\n          ...res,\n          visible: true,\n          label: {\n            text: entry.label\n          }\n        };\n      });\n    }\n\n    if (simpleVChartSpec.markArea) {\n      spec.markArea = handleMaybeArray(simpleVChartSpec.markArea, entry => {\n        const { label, ...res } = entry;\n        return {\n          ...res,\n          visible: true,\n          label: {\n            text: entry.label\n          }\n        };\n      });\n    }\n\n    if (simpleVChartSpec.label) {\n      spec.label = handleMaybeArray(simpleVChartSpec.label, entry => {\n        return {\n          ...entry,\n          visible: true\n        };\n      });\n    } else if (spec.label) {\n      delete spec.label;\n    }\n\n    if (simpleVChartSpec.indicator) {\n      const formatIndicator = (entry: any) => {\n        return {\n          title: {\n            style: {\n              text: entry.title\n            }\n          },\n          content: handleMaybeArray(entry.content, (t: string) => {\n            return {\n              style: {\n                text: t\n              }\n            };\n          })\n        };\n      };\n      spec.indicator = handleMaybeArray(simpleVChartSpec.indicator, formatIndicator);\n    } else if (spec.indicator) {\n      delete spec.indicator;\n    }\n\n    if (simpleVChartSpec.background) {\n      spec.background = simpleVChartSpec.background;\n    }\n\n    if (simpleVChartSpec.palette && simpleVChartSpec.palette.length) {\n      spec.color = simpleVChartSpec.palette;\n    }\n  }\n\n  return { spec };\n};\n"]}