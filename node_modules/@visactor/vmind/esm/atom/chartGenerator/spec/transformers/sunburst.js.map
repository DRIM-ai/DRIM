{"version":3,"sources":["../src/atom/chartGenerator/spec/transformers/sunburst.ts"],"names":[],"mappings":"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","file":"sunburst.js","sourcesContent":["import type { DataTable } from '../../../../types/base';\nimport type { GenerateChartCellContext } from '../../type';\nimport { color, revisedVChartType, sunburstOrTreemapField, theme } from './common';\n\nexport const sunburstData = (context: GenerateChartCellContext) => {\n  const { dataTable, cell, spec } = context;\n  spec.data = { id: 'data', values: getSunburstData(dataTable, cell.color, 0, cell.size) };\n  return { spec };\n};\n\nexport const getSunburstData: any = (\n  dataTable: DataTable,\n  colorField: string[] | string,\n  index: number,\n  sizeField: string\n) => {\n  if (colorField.length - 1 === index) {\n    return Array.from(\n      new Set(\n        dataTable.map(data => {\n          return { name: data[colorField[index]], value: data[sizeField] };\n        })\n      )\n    );\n  }\n  // Get the value range of this layer\n  const values = Array.from(\n    new Set(\n      dataTable.map(data => {\n        return data[colorField[index]];\n      })\n    )\n  );\n  return values.map(value => {\n    const currentDataset = dataTable.filter(data => {\n      return data[colorField[index]] === value;\n    });\n    return { name: value, children: getSunburstData(currentDataset, colorField, index + 1, sizeField) };\n  });\n};\n\nexport const sunburstDisplayConf = (context: GenerateChartCellContext) => {\n  const { spec } = context;\n  spec.offsetX = 0;\n  spec.offsetY = 0;\n  spec.outerRadius = 1;\n  spec.innerRadius = 0;\n  spec.gap = 5;\n  spec.drill = true;\n  spec.sunburst = {\n    visible: true,\n    style: {\n      fillOpacity: (datum: { isLeaf: any }) => {\n        return datum.isLeaf ? 0.4 : 0.8;\n      }\n    }\n  };\n  spec.label = {\n    visible: true,\n    style: {\n      fontSize: 12,\n      fillOpacity: (datum: { isLeaf: any }) => {\n        return datum.isLeaf ? 0.4 : 0.8;\n      }\n    }\n  };\n  spec.tooltip = {\n    mark: {\n      title: {\n        value: (val: { datum: any[] }) => {\n          return val?.datum?.map(data => data.name).join(' / ');\n        }\n      }\n    }\n  };\n  spec.animationEnter = {\n    easing: 'cubicInOut',\n    duration: 1000\n  };\n  spec.animationExit = {\n    easing: 'cubicInOut',\n    duration: 1000\n  };\n  spec.animationUpdate = {\n    easing: 'cubicInOut',\n    duration: 1000\n  };\n  return { spec };\n};\n\nexport const pipelineSunburst = [sunburstData, color, sunburstOrTreemapField, sunburstDisplayConf];\n"]}