{"version":3,"sources":["../src/atom/chartGenerator/spec/chartTypeUtils.ts"],"names":[],"mappings":"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","file":"chartTypeUtils.js","sourcesContent":["import { ChartType } from '../../../types';\n\nconst chartTypeMap: { [chartName: string]: string } = {\n  [ChartType.BarChart.toUpperCase()]: 'bar',\n  [ChartType.LineChart.toUpperCase()]: 'line',\n  [ChartType.AreaChart.toUpperCase()]: 'area',\n  [ChartType.PieChart.toUpperCase()]: 'pie',\n  [ChartType.WordCloud.toUpperCase()]: 'wordCloud',\n  [ChartType.ScatterPlot.toUpperCase()]: 'scatter',\n  [ChartType.DynamicBarChart.toUpperCase()]: 'bar',\n  [ChartType.FunnelChart.toUpperCase()]: 'funnel',\n  [ChartType.DualAxisChart.toUpperCase()]: 'common',\n  [ChartType.RoseChart.toUpperCase()]: 'rose',\n  [ChartType.RadarChart.toUpperCase()]: 'radar',\n  [ChartType.SankeyChart.toUpperCase()]: 'sankey',\n  [ChartType.WaterFallChart.toUpperCase()]: 'waterfall',\n  [ChartType.BoxPlot.toUpperCase()]: 'boxPlot',\n  [ChartType.LiquidChart.toUpperCase()]: 'liquid',\n  [ChartType.LinearProgress.toUpperCase()]: 'linearProgress',\n  [ChartType.CircularProgress.toUpperCase()]: 'circularProgress',\n  [ChartType.BubbleCirclePacking.toUpperCase()]: 'circlePacking',\n  [ChartType.MapChart.toUpperCase()]: 'map',\n  [ChartType.RangeColumnChart.toUpperCase()]: 'rangeColumn',\n  [ChartType.SunburstChart.toUpperCase()]: 'sunburst',\n  [ChartType.TreemapChart.toUpperCase()]: 'treemap',\n  [ChartType.Gauge.toUpperCase()]: 'gauge',\n  [ChartType.BasicHeatMap.toUpperCase()]: 'common',\n  [ChartType.VennChart.toUpperCase()]: 'venn'\n};\n\n/**\n * 将大模型返回的图表类型转化成vchart图表类型\n * @param type\n * @returns\n */\nexport const getVChartTypeByVmind = (type: string) => {\n  if (chartTypeMap[type]) {\n    return chartTypeMap[type];\n  }\n\n  return null;\n};\n\nexport const formatTypeToVMind = (type: string) => {\n  return Object.values(ChartType).find(vmindType => chartTypeMap[vmindType.toUpperCase()] === type) ?? type;\n};\n\n/**\n * 维护一个类型映射：\n *\n * {\n *   'LINEAR PROGRESS CHART' : 'Linear Progress chart'\n * }\n */\nexport const llmChartTypeMap: Record<string, ChartType> = Object.keys(ChartType).reduce((prev: any, cur: string) => {\n  const value = (ChartType as Record<string, string>)[cur];\n  prev[value.toUpperCase()] = value;\n  return prev;\n}, {});\n"]}