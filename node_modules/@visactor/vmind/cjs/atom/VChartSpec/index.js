"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
}), exports.registerVChartSpecAtom = exports.VChartSpec = void 0;

const atom_1 = require("../../types/atom"), base_1 = require("../base"), utils_1 = require("./utils"), factory_1 = require("../../core/factory");

class VChartSpec extends base_1.BaseAtom {
    constructor(context, option) {
        super(context, option), this.name = atom_1.AtomName.VCHART_SPEC, this.isLLMAtom = !1;
    }
    buildDefaultContext(context) {
        return Object.assign(Object.assign({}, context), {
            spec: {}
        });
    }
    _runWithOutLLM() {
        const {prevSpec: prevSpec, originalSpec: originalSpec, operations: operations} = this.context, baseSpec = null != prevSpec ? prevSpec : originalSpec;
        if (!operations || !operations.length) return this.context.spec = baseSpec, this.context;
        const {spec: newSpec} = (0, utils_1.runOperactionsOfSpec)(baseSpec, operations);
        return this.context.prevSpec = baseSpec, this.context.spec = newSpec, this.context;
    }
}

exports.VChartSpec = VChartSpec;

const registerVChartSpecAtom = () => {
    factory_1.Factory.registerAtom(atom_1.AtomName.VCHART_SPEC, VChartSpec);
};

exports.registerVChartSpecAtom = registerVChartSpecAtom;
//# sourceMappingURL=index.js.map