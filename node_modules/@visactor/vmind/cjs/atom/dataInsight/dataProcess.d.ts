import type { DataCell, DataTable } from '../../types';
import { ChartType, type DataInsightCtx } from '../../types';
import type { DimValueDataMap } from './type';
interface AxesDataInfoCtx {
    spec: any;
    chartType: ChartType;
    seriesField: string;
    yField: string[];
    xField: string;
}
export declare const extractAxesData: (context: AxesDataInfoCtx) => {
    leftAxesDataList?: undefined;
    rightAxesDataList?: undefined;
} | {
    leftAxesDataList: {
        dimensionDataMap: DimValueDataMap;
        dimensionValues: DataCell[];
        dimensionSumMap: Record<string, number[]>;
        dimensionStackSumMap: Record<string, number[]>;
        dataset: DataTable;
        series: any;
        seriesNames: string[];
        axisTitle: any;
        seriesIndex: any;
        seriesId: any;
        yField: any;
    };
    rightAxesDataList: {
        dimensionDataMap: DimValueDataMap;
        dimensionValues: DataCell[];
        dimensionSumMap: Record<string, number[]>;
        dimensionStackSumMap: Record<string, number[]>;
        dataset: DataTable;
        series: any;
        seriesNames: string[];
        axisTitle: any;
        seriesIndex: any;
        seriesId: any;
        yField: any;
    };
};
export declare const extractDataFromContext: (context: DataInsightCtx) => {
    leftAxesDataList?: undefined;
    rightAxesDataList?: undefined;
    dimensionDataMap: DimValueDataMap;
    dimensionValues: DataCell[];
    dimensionSumMap: Record<string, number[]>;
    dimensionStackSumMap: Record<string, number[]>;
    dataset: DataTable;
    originDataset: DataTable;
    fieldInfo: import("../../types").FieldInfo[];
    chartType: ChartType;
    seriesDataMap: DimValueDataMap;
    cell: import("../../types").Cell;
} | {
    leftAxesDataList: {
        dimensionDataMap: DimValueDataMap;
        dimensionValues: DataCell[];
        dimensionSumMap: Record<string, number[]>;
        dimensionStackSumMap: Record<string, number[]>;
        dataset: DataTable;
        series: any;
        seriesNames: string[];
        axisTitle: any;
        seriesIndex: any;
        seriesId: any;
        yField: any;
    };
    rightAxesDataList: {
        dimensionDataMap: DimValueDataMap;
        dimensionValues: DataCell[];
        dimensionSumMap: Record<string, number[]>;
        dimensionStackSumMap: Record<string, number[]>;
        dataset: DataTable;
        series: any;
        seriesNames: string[];
        axisTitle: any;
        seriesIndex: any;
        seriesId: any;
        yField: any;
    };
    dimensionDataMap: DimValueDataMap;
    dimensionValues: DataCell[];
    dimensionSumMap: Record<string, number[]>;
    dimensionStackSumMap: Record<string, number[]>;
    dataset: DataTable;
    originDataset: DataTable;
    fieldInfo: import("../../types").FieldInfo[];
    chartType: ChartType;
    seriesDataMap: DimValueDataMap;
    cell: import("../../types").Cell;
};
export {};
