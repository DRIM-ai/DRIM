{"version":3,"sources":["../src/atom/dataInsight/algorithms/template.ts"],"names":[],"mappings":"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","file":"template.js","sourcesContent":["import { ChartType } from '../../../types';\nimport type { DataCell, FieldInfo } from '../../../types';\nimport type { InsightTextContent } from '../type';\nimport { InsightType, type DataInsightExtractContext, type Insight } from '../type';\nimport { DEFAULT_SERIES_NAME } from '../const';\nimport { TrendType } from './statistics';\nimport { getFieldIdInCell } from '../../../utils/field';\n\nconst getFieldInfoById = (fieldInfo: FieldInfo[], fieldId: string) => {\n  return fieldInfo.find(info => info.fieldName === fieldId);\n};\nexport const isEmptySeries = (seriesName: any) => !seriesName || seriesName === DEFAULT_SERIES_NAME;\n\nconst getMinMaxTemplate = (insight: Insight, ctx: DataInsightExtractContext, language: 'chinese' | 'english') => {\n  const { value, info, type } = insight;\n  const { fieldInfo, cell } = ctx;\n  const xFieldId = getFieldIdInCell(cell.x);\n  const yFieldId = getFieldIdInCell(cell.y);\n  const isChinese = language === 'chinese';\n  const placeholderValue =\n    type === InsightType.Min ? (isChinese ? '最小值' : 'minimum') : isChinese ? '最大值' : 'maximum';\n  return {\n    content: info?.isAxesArea\n      ? isChinese\n        ? `\\${a}的${placeholderValue}位于\\${b}，值为\\${c}`\n        : `The ${placeholderValue} value of \\${a} at \\${b}, with a value of \\${c}`\n      : isChinese\n      ? `${placeholderValue}位于\\${b}，值为\\${c}`\n      : `The ${placeholderValue} value at \\${b} with a value of \\${c}`,\n    variables: {\n      ...(info?.isAxesArea\n        ? {\n            a: {\n              value: info?.titleName || getFieldInfoById(fieldInfo, yFieldId)?.alias || yFieldId,\n              fieldName: getFieldInfoById(fieldInfo, yFieldId)?.alias ?? yFieldId\n            }\n          }\n        : {}),\n      b: {\n        isDimValue: true,\n        value: info.dimValue,\n        fieldName: getFieldInfoById(fieldInfo, xFieldId)?.alias ?? xFieldId\n      },\n      c: {\n        value,\n        isMeasure: true,\n        fieldName: null as any\n      }\n    }\n  };\n};\n\nconst getAvgTemplate = (insight: Insight, ctx: DataInsightExtractContext, language: 'chinese' | 'english') => {\n  const { value, info } = insight;\n  const { fieldInfo, cell } = ctx;\n  const yFieldId = getFieldIdInCell(cell.y);\n  const isChinese = language === 'chinese';\n  return {\n    content: info?.isAxesArea\n      ? isChinese\n        ? '${a}的平均值为${b}'\n        : 'The average value of ${a} is ${b}'\n      : isChinese\n      ? '平均值为${b}'\n      : 'The average value is ${b}',\n    variables: {\n      ...(info?.isAxesArea\n        ? {\n            a: {\n              value: info?.titleName || getFieldInfoById(fieldInfo, yFieldId)?.alias || yFieldId,\n              fieldName: getFieldInfoById(fieldInfo, yFieldId)?.alias ?? yFieldId\n            }\n          }\n        : {}),\n      b: {\n        value,\n        isMeasure: true,\n        fieldName: null as any\n      }\n    }\n  };\n};\n\nconst getOutlierTemplate = (insight: Insight, ctx: DataInsightExtractContext, language: 'chinese' | 'english') => {\n  const { seriesName, data, value, fieldId } = insight;\n  const { fieldInfo, cell, chartType } = ctx;\n  const xFieldId = getFieldIdInCell(cell.x);\n  const seriesField = getFieldIdInCell(cell?.color);\n  const isChinese = language === 'chinese';\n  if ([ChartType.ScatterPlot].includes(chartType)) {\n    return {\n      content: isEmptySeries(seriesName)\n        ? isChinese\n          ? '(${b}, ${c})上显著异常'\n          : 'Significant anomaly at (${b}, ${c})'\n        : isChinese\n        ? '${a}在(${b}, ${c})上显著异常'\n        : '${a} shows a significant anomaly at (${b}, ${c})',\n      variables: {\n        ...(isEmptySeries(seriesName)\n          ? {}\n          : {\n              a: {\n                value: seriesName as string,\n                fieldName: getFieldInfoById(fieldInfo, seriesField)?.alias ?? seriesField\n              }\n            }),\n        b: {\n          isDimValue: true,\n          value: data?.[0]?.dataItem?.[fieldId[0]],\n          fieldName: getFieldInfoById(fieldInfo, fieldId[0])?.alias ?? fieldId[0]\n        },\n        c: {\n          isDimValue: true,\n          value: data?.[0]?.dataItem?.[fieldId[1]],\n          fieldName: getFieldInfoById(fieldInfo, fieldId[1])?.alias ?? fieldId[1]\n        }\n      }\n    };\n  }\n  return {\n    content: isEmptySeries(seriesName)\n      ? isChinese\n        ? '${b}上显著异常,值为${c}'\n        : 'Significant anomaly at ${b}, with a value of ${c}'\n      : isChinese\n      ? '${a}在${b}上显著异常，值为${c}'\n      : '${a} shows a significant anomaly at ${b}, with a value of ${c}',\n    variables: {\n      ...(isEmptySeries(seriesName)\n        ? {}\n        : {\n            a: {\n              value: seriesName as string,\n              fieldName: getFieldInfoById(fieldInfo, seriesField)?.alias ?? seriesField\n            }\n          }),\n      b: {\n        isDimValue: true,\n        value: data?.[0]?.dataItem?.[xFieldId],\n        fieldName: getFieldInfoById(fieldInfo, xFieldId)?.alias ?? xFieldId\n      },\n      c: {\n        value,\n        isMeasure: true,\n        fieldName: getFieldInfoById(fieldInfo, fieldId as string)?.alias ?? fieldId\n      }\n    }\n  };\n};\n\nconst getTurnPointTemplate = (insight: Insight, ctx: DataInsightExtractContext, language: 'chinese' | 'english') => {\n  const res = getOutlierTemplate(insight, ctx, language);\n  return {\n    content:\n      language === 'chinese'\n        ? res.content.replaceAll('上显著异常', '是个拐点')\n        : res.content\n            .replaceAll('Significant anomaly', 'Turning point')\n            .replaceAll('significant anomaly', 'turning point'),\n    variables: res.variables\n  };\n};\n\nconst getExtremeTemplate = (insight: Insight, ctx: DataInsightExtractContext, language: 'chinese' | 'english') => {\n  const res = getOutlierTemplate(insight, ctx, language);\n  return {\n    content:\n      language === 'chinese'\n        ? res.content.replaceAll('上显著异常', '是极值')\n        : res.content\n            .replaceAll('Significant anomaly', 'Extreme value')\n            .replaceAll('significant anomaly', 'extreme value'),\n    variables: res.variables\n  };\n};\n\nconst getMajorityTemplate = (insight: Insight, ctx: DataInsightExtractContext, language: 'chinese' | 'english') => {\n  const { seriesName, fieldId, info } = insight;\n  const { fieldInfo, cell } = ctx;\n  const { ratio, dimensionName } = info;\n  const xFieldId = getFieldIdInCell(cell.x);\n  const seriesField = getFieldIdInCell(cell?.color);\n  return {\n    content:\n      language === 'chinese'\n        ? '${a}在${b}的占比贡献度显著，占比高达${c}'\n        : '${a} significantly contributes to ${b}, at ${c}',\n    variables: {\n      a: {\n        value: seriesName as string,\n        fieldName: getFieldInfoById(fieldInfo, seriesField)?.alias ?? seriesField\n      },\n      b: {\n        value: dimensionName,\n        isDimValue: true,\n        fieldName: getFieldInfoById(fieldInfo, xFieldId)?.alias ?? xFieldId\n      },\n      c: {\n        value: ratio,\n        formatValue: `${(ratio * 100).toFixed(1)}%`,\n        fieldName: getFieldInfoById(fieldInfo, fieldId as string)?.alias ?? fieldId,\n        icon: 'ratio'\n      }\n    }\n  };\n};\n\nconst getAbnormalBandTemplate = (insight: Insight, ctx: DataInsightExtractContext, language: 'chinese' | 'english') => {\n  const { seriesName, data } = insight;\n  const { fieldInfo, cell } = ctx;\n  const xFieldId = getFieldIdInCell(cell.x);\n  const seriesField = getFieldIdInCell(cell?.color);\n  const isChinese = language === 'chinese';\n  return {\n    content: isEmptySeries(seriesName)\n      ? isChinese\n        ? '${b}至${c}之间存在异常区间'\n        : 'There is an anomalous interval between ${b} and ${c}'\n      : isChinese\n      ? '${a}在${b}至${c}之间存在异常区间'\n      : '${a} has an anomalous interval between ${b} and ${c}',\n    variables: {\n      ...(isEmptySeries(seriesName)\n        ? {}\n        : {\n            a: {\n              value: seriesName as string,\n              fieldName: getFieldInfoById(fieldInfo, seriesField)?.alias ?? seriesField\n            }\n          }),\n      b: {\n        isDimValue: true,\n        value: data[0].dataItem[xFieldId],\n        fieldName: getFieldInfoById(fieldInfo, xFieldId)?.alias ?? xFieldId\n      },\n      c: {\n        isDimValue: true,\n        value: data[data.length - 1].dataItem[xFieldId],\n        fieldName: getFieldInfoById(fieldInfo, xFieldId)?.alias ?? xFieldId\n      }\n    }\n  };\n};\n\nconst getOverallTrendTemplate = (insight: Insight, ctx: DataInsightExtractContext, language: 'chinese' | 'english') => {\n  const { value, info } = insight;\n  const { fieldInfo, cell } = ctx;\n  const { startDimValue, endDimValue, change, overall } = info;\n  const xFieldId = getFieldIdInCell(cell.x);\n  const isChinese = language === 'chinese';\n  return {\n    content: isChinese\n      ? `数据整体呈${'${a}'}趋势，整体${\n          value === TrendType.INCREASING ? '增长了' : '下降了'\n        }${'${d}'}。其中在${'${b}'}至${'${c}'}间连续${'${a}'}。`\n      : `The overall data shows a ${'${a}'} trend, with an overall ${\n          value === TrendType.INCREASING ? 'increase ' : 'decrease '\n        }of ${'${d}'}. Notably, from ${'${b}'} to ${'${c}'}, there was a continuous ${'${a}'} trend.`,\n    variables: {\n      a: {\n        value: isChinese\n          ? value === TrendType.INCREASING\n            ? '上升'\n            : '下降'\n          : value === TrendType.INCREASING\n          ? 'increasing'\n          : 'decreasing',\n        fieldName: null as any,\n        icon: value === TrendType.INCREASING ? 'ascendTrend' : 'descendTrend'\n      },\n      b: {\n        isDimValue: true,\n        value: startDimValue,\n        fieldName: getFieldInfoById(fieldInfo, xFieldId)?.alias ?? xFieldId\n      },\n      c: {\n        isDimValue: true,\n        value: endDimValue,\n        fieldName: getFieldInfoById(fieldInfo, xFieldId)?.alias ?? xFieldId\n      },\n      d: {\n        formatValue: (Math.abs(overall.change) * 100).toFixed(1) + '%',\n        value: overall.change,\n        valueType: value === TrendType.INCREASING ? 'ascendTrend' : 'descendTrend',\n        fieldName: null as any\n      }\n    }\n  };\n};\n\nconst getAbnormalTrendTemplate = (\n  insight: Insight,\n  ctx: DataInsightExtractContext,\n  language: 'chinese' | 'english'\n) => {\n  const { seriesName, value, info } = insight;\n  const { fieldInfo, cell } = ctx;\n  const seriesField = getFieldIdInCell(cell?.color);\n  const isChinese = language === 'chinese';\n  return {\n    content: isChinese\n      ? '${a}趋势异常，呈${b}趋势，整体${b}了${c}'\n      : 'The ${a} trend is abnormal, showing a ${b} trend, with an overall ${b} of ${c}.',\n    variables: {\n      a: {\n        value: seriesName as string,\n        fieldName: getFieldInfoById(fieldInfo, seriesField)?.alias ?? seriesField\n      },\n      b: {\n        value: isChinese\n          ? value === TrendType.INCREASING\n            ? '上升'\n            : '下降'\n          : value === TrendType.INCREASING\n          ? 'increase'\n          : 'decrease',\n        fieldName: null as any,\n        icon: value === TrendType.INCREASING ? 'ascendTrend' : 'descendTrend'\n      },\n      c: {\n        value: (Math.abs(info.change) * 100).toFixed(1) + '%',\n        valueType: value === TrendType.INCREASING ? 'ascendTrend' : 'descendTrend',\n        fieldName: null as any\n      }\n    }\n  };\n};\n\nconst getCorrelationTemplate = (insight: Insight, ctx: DataInsightExtractContext, language: 'chinese' | 'english') => {\n  const { seriesName, value, info, name } = insight;\n  const { fieldInfo, cell } = ctx;\n  const { correlationType } = info || {};\n  const seriesField = getFieldIdInCell(cell?.color);\n  const isChinese = language === 'chinese';\n  if (name === 'spearman') {\n    return {\n      content: isChinese ? '${a}和${b}呈${c}相关' : '${a} and ${b} show a ${c} correlation',\n      variables: {\n        a: {\n          value: (seriesName as DataCell[])[0],\n          fieldName: getFieldInfoById(fieldInfo, seriesField)?.alias ?? seriesField\n        },\n        b: {\n          value: (seriesName as DataCell[])[1],\n          fieldName: getFieldInfoById(fieldInfo, seriesField)?.alias ?? seriesField\n        },\n        c: {\n          value: isChinese\n            ? correlationType === 'positive'\n              ? '正'\n              : '负'\n            : correlationType === 'positive'\n            ? 'positive'\n            : 'negative',\n          fieldName: null as any\n        }\n      }\n    };\n  }\n  return {\n    content: isEmptySeries(seriesName)\n      ? isChinese\n        ? '图表在xy上呈线性相关'\n        : 'The chart shows a linear correlation on the xy plane'\n      : isChinese\n      ? '${a}在xy上呈线性相关'\n      : '${a} shows a linear correlation on the xy plane',\n    variables: {\n      ...(isEmptySeries(seriesName)\n        ? {\n            a: {\n              value: seriesName as string,\n              fieldName: getFieldInfoById(fieldInfo, seriesField)?.alias ?? seriesField\n            }\n          }\n        : {})\n    }\n  };\n};\n\nconst getVolatilityTemplate = (insight: Insight, ctx: DataInsightExtractContext, language: 'chinese' | 'english') => {\n  const { seriesName } = insight;\n  const { fieldInfo, cell } = ctx;\n  const seriesField = getFieldIdInCell(cell?.color);\n  return {\n    content: isEmptySeries(seriesName)\n      ? language === 'chinese'\n        ? '数据呈周期性波动'\n        : 'The data shows cyclical fluctuations.'\n      : language === 'chinese'\n      ? '${a}呈周期性波动'\n      : '${a} shows cyclical fluctuations',\n    variables: isEmptySeries(seriesName)\n      ? {}\n      : {\n          a: {\n            value: seriesName as string,\n            fieldName: getFieldInfoById(fieldInfo, seriesField)?.alias ?? seriesField\n          }\n        }\n  };\n};\n\nexport const addPlainText = (textContent: { content: string; variables?: Record<string, InsightTextContent> }) => {\n  const { content, variables = {} } = textContent;\n  let plainText = `${content}`;\n  Object.keys(variables).forEach(key => {\n    const value = variables[key];\n    plainText = plainText.replaceAll(`\\${${key}}`, `${value.formatValue || value.value}`);\n  });\n  return {\n    ...textContent,\n    plainText\n  };\n};\n\nexport const generateInsightTemplate = (\n  insights: Insight[],\n  ctx: DataInsightExtractContext,\n  language: 'chinese' | 'english'\n) => {\n  for (let i = 0; i < insights.length; i++) {\n    const { type } = insights[i];\n    let textContent = null;\n    switch (type) {\n      case InsightType.Outlier:\n        textContent = getOutlierTemplate(insights[i], ctx, language);\n        break;\n      case InsightType.TurningPoint:\n        textContent = getTurnPointTemplate(insights[i], ctx, language);\n        break;\n      case InsightType.MajorityValue:\n        textContent = getMajorityTemplate(insights[i], ctx, language);\n        break;\n      case InsightType.AbnormalBand:\n        textContent = getAbnormalBandTemplate(insights[i], ctx, language);\n        break;\n      case InsightType.OverallTrend:\n        textContent = getOverallTrendTemplate(insights[i], ctx, language);\n        break;\n      case InsightType.AbnormalTrend:\n        textContent = getAbnormalTrendTemplate(insights[i], ctx, language);\n        break;\n      case InsightType.Correlation:\n        textContent = getCorrelationTemplate(insights[i], ctx, language);\n        break;\n      case InsightType.Volatility:\n        textContent = getVolatilityTemplate(insights[i], ctx, language);\n        break;\n      case InsightType.ExtremeValue:\n        textContent = getExtremeTemplate(insights[i], ctx, language);\n        break;\n      case InsightType.Min:\n      case InsightType.Max:\n        textContent = getMinMaxTemplate(insights[i], ctx, language);\n        break;\n      case InsightType.Avg:\n        textContent = getAvgTemplate(insights[i], ctx, language);\n        break;\n      default:\n        textContent = {\n          content: language === 'chinese' ? `数据含有${insights[i].type}的见解` : `Data has ${insights[i].type} insight`\n        };\n        break;\n    }\n    insights[i].textContent = addPlainText(textContent);\n  }\n  return insights;\n};\n"]}