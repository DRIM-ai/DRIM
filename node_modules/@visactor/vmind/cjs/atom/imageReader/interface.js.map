{"version":3,"sources":["../src/atom/imageReader/interface.ts"],"names":[],"mappings":"","file":"interface.js","sourcesContent":["import type { BaseContext } from '../../types/atom';\n\nexport interface SimpleVChartSpec {\n  /** 图表的类型 */\n  type:\n    | 'common'\n    | 'area'\n    | 'line'\n    | 'bar'\n    | 'rangeColumn'\n    | 'rangeArea'\n    | 'map'\n    | 'pie'\n    | 'radar'\n    | 'rose'\n    | 'scatter'\n    | 'sequence'\n    | 'circularProgress'\n    | 'linearProgress'\n    | 'wordCloud'\n    | 'funnel'\n    | 'waterfall'\n    | 'boxPlot'\n    | 'gauge'\n    | 'sankey'\n    | 'treemap'\n    | 'sunburst'\n    | 'circlePacking'\n    | 'heatmap'\n    | 'liquid'\n    | 'venn'\n    | 'mosaic';\n  /**\n   * \"none\" - 无坐标系\n   * \"rect\" - 直角坐标系\n   * \"polar' - \"极坐标系\"\n   */\n  coordinate?: 'none' | 'rect' | 'polar';\n  /** 是否发生堆积，如果是百分比堆积，返回 'percent' */\n  stackOrPercent?: 'stack' | 'percent';\n  /**\n   * 是否存在横向条形图\n   */\n  transpose?: boolean;\n  /*\n   * 图表中的数据，数据需要按照明细数据的格式返回回来，name表示数据对应的维度值，value表示数据对应的度量值；group表示分组值；注意组合图不需要在这里返回数据\n   */\n  data?: { name: string; value: number; group?: string }[];\n  /** 主要图形的配色色板 */\n  palette?: string[];\n  /** 背景色 */\n  background?: string;\n  /**\n   * 图例组件, 其中type: 'discrete'表示离散类型，type: 'color'表示颜色图例；'size'表示连续数值图例\n   */\n  legends?: { type: 'discrete' | 'color' | 'size'; orient: 'top' | 'left' | 'right' | 'bottom' }[];\n  /**\n   * 图表的标题，可能包含主标题和副标题，通常位于图表的顶部或者底部\n   */\n  title?: { text: string; subText?: string; orient: 'top' | 'left' | 'right' | 'bottom' }[];\n  /**\n   * 返回所有的坐标轴，注意：\n   * 直角坐标系的坐标轴可以位于'top' | 'left' | 'right' |'bottom', 极坐标系可以位于'radius' | 'angle'\n   * hasGrid 表示是否存在垂直于轴线方向的网格线或者网格块\n   * 当坐标轴不可见时，visible 为 false\n   */\n  axes?: {\n    visible?: boolean;\n    type: 'band' | 'linear';\n    orient: 'top' | 'left' | 'right' | 'bottom' | 'radius' | 'angle';\n    hasGrid?: boolean;\n  }[];\n  /**\n   * 指标组件，一般在环形图、水波图、进度条等图表中，用于展示特定的指标数据，一般位于图表的中心或者底部\n   */\n  indicator?: { title?: string; content?: string[] }[];\n  /** 缩略轴组件 */\n  dataZoom?: { orient: 'top' | 'left' | 'right' | 'bottom' }[];\n  /** 标注点 */\n  markPoint?: { x: any; y: any; label?: string }[];\n  /** 标注线 */\n  markLine?: { x?: any; y?: any; label?: string }[];\n  /** 标注区域 */\n  markArea?: { x?: any; x1?: any; y?: any; y1?: any; label?: string }[];\n  /**\n   * 是否显示数据标签组件，注意数据标签一般位于系列图形的周围\n   */\n  label?: { position: 'top' | 'left' | 'right' | 'bottom' | 'inside' | 'outside' }[];\n  /**\n   * 组合图返回图形的系列配置，非组合图不需要返回，每个系列要返回解析到的数据，数据中name表示数据对应的维度值，value表示数据对应的度量值；group表示分组值：*/\n  series?: { type: string; data: { name: string; value: number; group?: string }[] }[];\n}\n\n/** Context of Chart Command Atom */\nexport interface ImageReaderCtx extends BaseContext {\n  /**\n   * 图片 base 64 编码\n   */\n  image?: string;\n  /**\n   * 简单图表 spec，用于生成最终的vchart spec\n   */\n  simpleVChartSpec?: SimpleVChartSpec;\n}\n"]}