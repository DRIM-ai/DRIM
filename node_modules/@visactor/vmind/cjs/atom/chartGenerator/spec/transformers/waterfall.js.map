{"version":3,"sources":["../src/atom/chartGenerator/spec/transformers/waterfall.ts"],"names":[],"mappings":";;;AACA,qCAAiF;AAE1E,MAAM,cAAc,GAAG,CAAC,OAAiC,EAAE,EAAE;IAElE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC;IAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;IACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;IACrB,IAAI,CAAC,KAAK,GAAG;QACX,IAAI,EAAE,KAAK;QACX,IAAI,EAAE,IAAI;KACX,CAAC;IAEF,OAAO,EAAE,IAAI,EAAE,CAAC;AAClB,CAAC,CAAC;AAXW,QAAA,cAAc,kBAWzB;AAEK,MAAM,aAAa,GAAG,CAAC,OAAiC,EAAE,EAAE;IAEjE,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC;IACzB,IAAI,CAAC,IAAI,GAAG;QACV;YACE,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE;YAC9C,KAAK,EAAE;gBACL,YAAY,EAAE,CAAC,CAAM,EAAE,EAAE;oBACvB,OAAO,CAAC,GAAG,GAAG,CAAC;gBACjB,CAAC;aACF;SACF;QACD;YACE,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;YACxB,IAAI,EAAE,MAAM;YACZ,YAAY,EAAE,GAAG;YACjB,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;SACvC;KACF,CAAC;IACF,OAAO,EAAE,IAAI,EAAE,CAAC;AAClB,CAAC,CAAC;AAtBW,QAAA,aAAa,iBAsBxB;AAEK,MAAM,mBAAmB,GAAG,CAAC,OAAiC,EAAE,EAAE;IAEvE,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC;IACzB,IAAI,CAAC,UAAU,GAAG;QAChB,SAAS,EAAE,UAAU;QACrB,YAAY,EAAE,CAAC,IAAS,EAAE,EAAE;YAC1B,OAAO,IAAI,GAAG,GAAG,CAAC;QACpB,CAAC;KACF,CAAC;IACF,OAAO,EAAE,IAAI,EAAE,CAAC;AAClB,CAAC,CAAC;AAVW,QAAA,mBAAmB,uBAU9B;AAEW,QAAA,iBAAiB,GAAG,CAAC,aAAI,EAAE,cAAK,EAAE,sBAAc,EAAE,qBAAa,EAAE,2BAAmB,EAAE,uBAAc,CAAC,CAAC","file":"waterfall.js","sourcesContent":["import type { GenerateChartCellContext } from '../../type';\nimport { color, data, discreteLegend, revisedVChartType, theme } from './common';\n\nexport const waterfallField = (context: GenerateChartCellContext) => {\n  //assign field in spec according to cell\n  const { cell, spec } = context;\n  spec.xField = cell.x;\n  spec.yField = cell.y;\n  spec.total = {\n    type: 'end',\n    text: '总计'\n  };\n\n  return { spec };\n};\n\nexport const waterfallAxes = (context: GenerateChartCellContext) => {\n  //assign axises\n  const { spec } = context;\n  spec.axes = [\n    {\n      orient: 'left',\n      title: { visible: true, text: 'favorability' },\n      label: {\n        formatMethod: (v: any) => {\n          return v + '%';\n        }\n      }\n    },\n    {\n      orient: 'bottom',\n      label: { visible: true },\n      type: 'band',\n      paddingInner: 0.4,\n      title: { visible: true, text: 'date' }\n    }\n  ];\n  return { spec };\n};\n\nexport const waterfallStackLabel = (context: GenerateChartCellContext) => {\n  //assign axises\n  const { spec } = context;\n  spec.stackLabel = {\n    valueType: 'absolute',\n    formatMethod: (text: any) => {\n      return text + '%';\n    }\n  };\n  return { spec };\n};\n\nexport const pipelineWaterfall = [data, color, waterfallField, waterfallAxes, waterfallStackLabel, discreteLegend];\n"]}