{"version":3,"sources":["../src/atom/chartGenerator/spec/transformers/map.ts"],"names":[],"mappings":";;;AACA,qCAAsE;AAE/D,MAAM,OAAO,GAAG,CAAC,OAAiC,EAAE,EAAE;IAC3D,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC;IACxC,IAAI,aAAa,CAAC,iBAAiB,EAAE;QACnC,IAAI,CAAC,MAAM,GAAG;YACZ;gBACE,IAAI,EAAE,IAAI;gBACV,UAAU,EAAE,EAAE,IAAI,EAAE,aAAa,CAAC,iBAAiB,EAAE;gBACrD,UAAU,EAAE,aAAa,CAAC,gBAAgB;aAC3C;SACF,CAAC;KACH;SAAM;QACL,IAAI,CAAC,MAAM,GAAG;YACZ;gBACE,IAAI,EAAE,IAAI;gBACV,UAAU,EAAE,aAAa,CAAC,gBAAgB;aAC3C;SACF,CAAC;KACH;IAED,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;IACjB,OAAO,EAAE,IAAI,EAAE,CAAC;AAClB,CAAC,CAAC;AArBW,QAAA,OAAO,WAqBlB;AAEK,MAAM,QAAQ,GAAG,CAAC,OAAiC,EAAE,EAAE;IAC5D,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC;IAE/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;IAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;IAC/B,OAAO,EAAE,IAAI,EAAE,CAAC;AAClB,CAAC,CAAC;AAPW,QAAA,QAAQ,YAOnB;AAEK,MAAM,cAAc,GAAG,CAAC,OAAiC,EAAE,EAAE;IAClE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC;IAC/B,IAAI,CAAC,OAAO,GAAG;QACb;YACE,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,IAAI,CAAC,IAAI;YAChB,MAAM,EAAE,QAAQ;YAChB,QAAQ,EAAE,OAAO;SAClB;KACF,CAAC;IACF,IAAI,CAAC,IAAI,GAAG;QACV,KAAK,EAAE;YACL,IAAI,EAAE;gBACJ,KAAK,EAAE,IAAI,CAAC,IAAI;gBAChB,KAAK,EAAE,OAAO;gBACd,YAAY,EAAE,SAAS;aACxB;SACF;KACF,CAAC;IACF,OAAO,EAAE,IAAI,EAAE,CAAC;AAClB,CAAC,CAAC;AArBW,QAAA,cAAc,kBAqBzB;AAEW,QAAA,gBAAgB,GAAG,CAAC,eAAO,EAAE,cAAK,EAAE,kBAAS,EAAE,gBAAQ,EAAE,sBAAc,CAAC,CAAC","file":"map.js","sourcesContent":["import type { GenerateChartCellContext } from '../../type';\nimport { arrayData, color, revisedVChartType, theme } from './common';\n\nexport const basemap = (context: GenerateChartCellContext) => {\n  const { basemapOption, spec } = context;\n  if (basemapOption.regionProjectType) {\n    spec.region = [\n      {\n        roam: true,\n        projection: { type: basemapOption.regionProjectType },\n        coordinate: basemapOption.regionCoordinate\n      }\n    ];\n  } else {\n    spec.region = [\n      {\n        roam: true,\n        coordinate: basemapOption.regionCoordinate\n      }\n    ];\n  }\n\n  spec.map = 'map';\n  return { spec };\n};\n\nexport const mapField = (context: GenerateChartCellContext) => {\n  const { spec, cell } = context;\n\n  spec.nameField = cell.color;\n  spec.valueField = cell.size;\n  spec.nameProperty = cell.color;\n  return { spec };\n};\n\nexport const mapDisplayConf = (context: GenerateChartCellContext) => {\n  const { spec, cell } = context;\n  spec.legends = [\n    {\n      visible: true,\n      type: 'color',\n      field: cell.size,\n      orient: 'bottom',\n      position: 'start'\n    }\n  ];\n  spec.area = {\n    style: {\n      fill: {\n        field: cell.size,\n        scale: 'color',\n        changeDomain: 'replace'\n      }\n    }\n  };\n  return { spec };\n};\n\nexport const pipelineMapChart = [basemap, color, arrayData, mapField, mapDisplayConf];\n"]}