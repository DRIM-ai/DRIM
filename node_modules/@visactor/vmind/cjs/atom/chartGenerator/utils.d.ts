import type { DataTypeName } from '@visactor/chart-advisor';
import { ChartType } from '@visactor/chart-advisor';
import type { Cell, FieldInfo } from '../../types';
import type { ChartGeneratorCtx } from '../../types';
export { getVChartTypeByVmind } from './spec/chartTypeUtils';
export declare const getVizSchema: (context: ChartGeneratorCtx) => {
    fields: {
        id: string;
        alias: string;
        description: string;
        visible: boolean;
        type: import("../../types").DataType;
        role: import("../../types").ROLE;
        location: import("../../types").ROLE;
    }[];
};
export declare const typeMap: (type: string) => DataTypeName;
export declare const VMindChartTypeMap: Record<string, ChartType[]>;
export declare const chartTypeMap: (advisorChartType: ChartType) => "Bar Chart" | "Line Chart" | "Pie Chart" | "Rose Chart" | "Scatter Plot" | "Dual Axis Chart" | "Word Cloud" | "Funnel Chart" | "Sankey Chart" | "Radar Chart";
export declare const getCell: (cell: any) => Cell;
export declare const checkChartTypeAndCell: (chartType: string, cell: any, fieldInfo: FieldInfo[]) => boolean;
export declare const estimateVideoTime: (chartType: string, spec: any, parsedTime?: number) => {
    totalTime: number;
    frameArr: any[];
};
