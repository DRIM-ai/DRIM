{"version":3,"sources":["../src/types/rag.ts"],"names":[],"mappings":"","file":"rag.js","sourcesContent":["export interface IRAGOptions {\n  /** url of vector db */\n  url: string;\n  /** viking db name */\n  vikingdbName: string;\n  headers?: HeadersInit;\n  method?: 'POST' | 'GET';\n}\n\nexport interface RecallOptions {\n  indexName: string;\n  topK: number;\n  subIndex?: string;\n  dslQuery?: Record<string, any>;\n  isRandomRecall?: boolean;\n  vector?: number[];\n  sparseVector?: string[];\n  sparseLogitAlpha?: number;\n  missAsEmpty?: boolean;\n  /** need get chunk manually */\n  manualChunk?: boolean;\n}\n\nexport interface RecallResult {\n  scores: number;\n  label_upper64: number;\n  label_lower64: number;\n  attrs: string;\n  extraInfos: string;\n}\n\nexport interface RawEmbeddingOptions {\n  rawDatas: { text: string }[];\n}\n\nexport interface RawEmbdeddingResult {\n  vector?: number[];\n  sparseVector?: string[];\n  error?: string;\n}\n\nexport type RawRecallOptions = Omit<RecallOptions, 'vector' | 'sparseVector'> & {\n  text: string;\n};\n"]}