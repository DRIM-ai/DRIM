import type { TableData, GroupedData, GroupChunk, Select, SelectColumn, ColumnName, ColumnConfig, ColumnEvaluate, AggregateEvaluate, Value, Row } from '../types';
export type SelectPipe = (params: {
    select: Select;
    source: TableData;
}) => (tableData: TableData) => TableData;
export type SelectGroupPipe = (params: {
    select: Select;
    source: TableData;
}) => (grouped: GroupedData) => TableData;
export declare const select: SelectPipe;
export declare const selectGroup: SelectGroupPipe;
export declare const getSelectColumnName: (selectColumn: SelectColumn) => ColumnName;
export declare const evaluateRowColumnValue: ({ column, row, source }: {
    column: {
        column: ColumnName | ColumnEvaluate;
    };
    row: Row;
    source: TableData;
}) => Value;
export declare const evaluateGroupColumnValue: ({ column, group, source }: {
    column: ColumnConfig;
    group: GroupChunk;
    source: TableData;
}) => Value;
export declare const getColumnIdentity: (column: ColumnConfig) => ColumnName | ColumnEvaluate | AggregateEvaluate;
export declare const getColumnIdentityName: (column: ColumnConfig) => string;
