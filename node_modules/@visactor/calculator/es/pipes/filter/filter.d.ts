import { type Value, type FilterOperation, type Row, type GroupChunk, type FilterNode, type FilterCondition, type WhereCondition, type HavingCondition } from '../../types';
export declare const judgeFilterTree: <T extends Row | GroupChunk, Condition extends FilterCondition = T extends Row ? WhereCondition : HavingCondition>(params: {
    filterNode: FilterCondition | FilterNode<Condition>;
    item: T;
    getValue: (params: {
        item: T;
        condition: Condition;
    }) => Value;
}) => boolean;
export declare const judge: ({ value, filter }: {
    value: Value;
    filter: FilterOperation;
}) => boolean;
